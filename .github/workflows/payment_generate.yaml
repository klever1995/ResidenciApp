name: Deploy Generate Payments Microservice to EC2

on:
  push:
    branches:
      - Test2  # Cambia esto por la rama que deseas usar para el despliegue

jobs:
  build_and_push_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/Payments/generate_payments  # Ruta al microservicio
          file: ./BackEnd/Payments/generate_payments/Dockerfile  # Ruta al Dockerfile
          push: true
          tags: ksrobalino/generate_payments:latest  # Nombre de la imagen en Docker Hub

  deploy_to_ec2:
    name: Deploy Docker Container to EC2
    runs-on: ubuntu-latest
    needs: build_and_push_image

    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST_GENERATE_PAYMENTS }}  # Host de la instancia EC2
          username: ec2-user  # Usuario de la instancia EC2
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Instalando Docker..."
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo service docker start
              sudo usermod -a -G docker ec2-user
              echo "Docker instalado correctamente."
            else
              echo "Docker ya estÃ¡ instalado."
            fi

            # Detener y eliminar el contenedor si ya existe
            sudo docker stop generate_payments || true
            sudo docker rm generate_payments || true

            # Crear el archivo .env con las variables de entorno
            echo "DB_HOST=dbpostgres.c0koula3al44.us-east-1.rds.amazonaws.com" > .env
            echo "DB_USER=admin123" >> .env
            echo "DB_PASSWORD=Ksrobalino123" >> .env
            echo "DB_NAME=postgres" >> .env
            echo "DB_PORT=5432" >> .env
            echo "PORT=9002" >> .env  # Cambia el puerto a 9002

            # Pull de la imagen de Docker Hub
            sudo docker pull ksrobalino/generate_payments:latest  # Cambia el nombre de la imagen

            # Ejecutar el contenedor
            sudo docker run -d --name generate_payments --env-file .env -p 9002:9002 ksrobalino/generate_payments:latest  # Cambia el nombre del contenedor y el puerto